#!/usr/bin/env bash
# ^ uses `env` command (via that path) to get path variables and then call `bash`
#   according to first occurrence found
#
# Name this script "commit-msg" and place it in the ".git/hooks/" directory

##====================================================================================##
# If any command fails, exit immediately with that command's exit status
# Exit if an attempt to expand an unset variable
# Write output to stdout
set -euo pipefail
##====================================================================================##

##====================================================================================##
## ANSI Color Codes for use with echo command
## in order to ensure robustness we've just placed these in the hook itself
##                                                     (rather than source another file)
## Just comment in/out as needed if you decide to edit
# BLACK='\033[0;30m'
# RED='\033[0;31m'
GREEN='\033[0;32m'
# BROWN='\033[0;33m'
# BLUE='\033[0;34m'
# PURPLE='\033[0;35m'
# CYAN='\033[0;36m'
# LIGHT_GRAY='\033[0;37m'
DARK_GRAY='\033[1;30m'
# LIGHT_RED='\033[1;31m'
LIGHT_GREEN='\033[1;32m'
YELLOW='\033[1;33m'
# LIGHT_BLUE='\033[1;34m'
# LIGHT_PURPLE='\033[1;35m'
# LIGHT_CYAN='\033[1;36m'
# WHITE='\033[1;37m'
NC='\033[0m' # No Color
##====================================================================================##

echo -e "${DARK_GRAY}==============${YELLOW}Beginning of Commit-Msg Hook Script${DARK_GRAY}===============${NC}"

# run committed on temp file holding most recent commit message
echo -e "${DARK_GRAY}================================================================${NC}"
echo -e "${YELLOW}printing commit message for reference${NC}"
echo
echo "Commit Message received:"
echo "$(cat $1)"
echo
echo -e "${GREEN}Consistent with committed patterns!${NC}"
echo -e "${DARK_GRAY}================================================================${NC}"

# run committed on temp file holding most recent commit message
echo -e "${DARK_GRAY}================================================================${NC}"
echo -e "${YELLOW}running committed as commit linter...${NC}"
echo
committed --commit-file "${1}"
echo
echo -e "${GREEN}Consistent with committed patterns!${NC}"
echo -e "${DARK_GRAY}================================================================${NC}"

# run committed on temp file holding most recent commit message
echo -e "${DARK_GRAY}================================================================${NC}"
echo -e "${YELLOW}running typos as heuristic spellchecker...${NC}"
echo
typos "${1}"
echo
echo -e "${GREEN}Passed typos heuristic checks!${NC}"
##====================================================================================##
# END OF SCRIPT
