

# # declares name of CLI app and where the insertion point is
# [tool.poetry.scripts]
# cli-app-name = "pkg_name.commands:app"


[tool.isort]
# compatibility with Black formatter
profile = "black"


[tool.pylint]
disable = [
    # "C0303",  # trailing-whitespace -- interferes with docstring markdown
    "R0903",  # too-few-public-methods -- interferes with type capture of program logic
]

[tool.pylint.format]
# line length to match Black formatter
max-line-length = "88"


[tool.pyright]
include = ["src"]
exclude = [".venv",
    "src/experimental",
    "src/typestubs",
    "**/__pycache__",
]
# utilizing the fact that we've set Poetry `virtualenv.in-project` to true
venvPath = "."
venv = ".venv"

typeCheckingMode = "basic"  # "off", "basic", "strict"
reportMissingImports = true
reportMissingTypeStubs = true

executionEnvironments = [
  { root = "src" }
]


[tool.pytest.ini_options]
# adds the following paths to pythonpath, specified relative to root dir
addopts = "--doctest-modules"  # run doctests
pythonpath = [
    "src",
]


[tool.ruff]
# Allow imports relative to the "src" and "test" directories.
src = ["src", "tests"]

# warn only, but recommend restructuring for unused `__init__.py` module imports
ignore-init-module-imports = true

select = ["ALL"]
ignore = [
    "D203",  # One blank line before class -- conflicts with "D211"
    "D213",  # Multiline docstrings start on second line -- conflicts with "D212"
]

[tool.ruff.extend-per-file-ignores]
# this file contains CLI args expressed as function parameters (via Typer decorators)
"commands.py" =[
    "FBT001",  # No `bool` params -- used to specify CLI arguments with Typer module
    "FBT002",  # No `bool` param defaults -- CLI argument values in Typer module
    "UP007",   # No `Option[..]` Type-syntax -- used by Typer module
]
# this file will be testing functions taking de facto CLI args (re: Typer decorators)
"test_commands.py" =[
    "FBT003",  # No `bool` in func calls -- functions being tested represent CLI args
]
# test files will of course use asserts and 'ad hoc' constants
"test_*.py" =[
    "S101",     # Use of `assert` -- intended in tests files
    "PLR2004",  # Magic Value used in comparison -- impractical rule in test files
]
